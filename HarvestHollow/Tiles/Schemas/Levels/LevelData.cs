// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by DefaultDomain, version 1.11.3
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace harvesthollow.levels
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// This schema defines a level in Harvest Hollow.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("DefaultDomain", "1.11.3")]
	public partial class LevelSchema : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""LevelSchema"",""doc"":""This schema defines a level in Harvest Hollow."",""namespace"":""harvesthollow.levels"",""fields"":[{""name"":""id"",""doc"":""User defined unique identifier."",""type"":""string""},{""name"":""iid"",""doc"":""Unique instance identifier."",""type"":""string""},{""name"":""uid"",""doc"":""Unique int identifier."",""type"":""int""},{""name"":""worldDepth"",""doc"":""Depth of the level in the world."",""type"":""int""},{""name"":""worldX"",""doc"":""World X coordinate in pixels."",""type"":""int""},{""name"":""worldY"",""doc"":""World Y coordinate in pixels."",""type"":""int""},{""name"":""levelWidth"",""doc"":""The width of the level in pixels. "",""type"":""int""},{""name"":""levelHeight"",""doc"":""The height of the level in pixels."",""type"":""int""}]}");
		/// <summary>
		/// User defined unique identifier.
		/// </summary>
		private string _id;
		/// <summary>
		/// Unique instance identifier.
		/// </summary>
		private string _iid;
		/// <summary>
		/// Unique int identifier.
		/// </summary>
		private int _uid;
		/// <summary>
		/// Depth of the level in the world.
		/// </summary>
		private int _worldDepth;
		/// <summary>
		/// World X coordinate in pixels.
		/// </summary>
		private int _worldX;
		/// <summary>
		/// World Y coordinate in pixels.
		/// </summary>
		private int _worldY;
		/// <summary>
		/// The width of the level in pixels. 
		/// </summary>
		private int _levelWidth;
		/// <summary>
		/// The height of the level in pixels.
		/// </summary>
		private int _levelHeight;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return LevelSchema._SCHEMA;
			}
		}
		/// <summary>
		/// User defined unique identifier.
		/// </summary>
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				this._id = value;
			}
		}
		/// <summary>
		/// Unique instance identifier.
		/// </summary>
		public string iid
		{
			get
			{
				return this._iid;
			}
			set
			{
				this._iid = value;
			}
		}
		/// <summary>
		/// Unique int identifier.
		/// </summary>
		public int uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				this._uid = value;
			}
		}
		/// <summary>
		/// Depth of the level in the world.
		/// </summary>
		public int worldDepth
		{
			get
			{
				return this._worldDepth;
			}
			set
			{
				this._worldDepth = value;
			}
		}
		/// <summary>
		/// World X coordinate in pixels.
		/// </summary>
		public int worldX
		{
			get
			{
				return this._worldX;
			}
			set
			{
				this._worldX = value;
			}
		}
		/// <summary>
		/// World Y coordinate in pixels.
		/// </summary>
		public int worldY
		{
			get
			{
				return this._worldY;
			}
			set
			{
				this._worldY = value;
			}
		}
		/// <summary>
		/// The width of the level in pixels. 
		/// </summary>
		public int levelWidth
		{
			get
			{
				return this._levelWidth;
			}
			set
			{
				this._levelWidth = value;
			}
		}
		/// <summary>
		/// The height of the level in pixels.
		/// </summary>
		public int levelHeight
		{
			get
			{
				return this._levelHeight;
			}
			set
			{
				this._levelHeight = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.id;
			case 1: return this.iid;
			case 2: return this.uid;
			case 3: return this.worldDepth;
			case 4: return this.worldX;
			case 5: return this.worldY;
			case 6: return this.levelWidth;
			case 7: return this.levelHeight;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.id = (System.String)fieldValue; break;
			case 1: this.iid = (System.String)fieldValue; break;
			case 2: this.uid = (System.Int32)fieldValue; break;
			case 3: this.worldDepth = (System.Int32)fieldValue; break;
			case 4: this.worldX = (System.Int32)fieldValue; break;
			case 5: this.worldY = (System.Int32)fieldValue; break;
			case 6: this.levelWidth = (System.Int32)fieldValue; break;
			case 7: this.levelHeight = (System.Int32)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}

